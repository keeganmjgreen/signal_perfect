f_i(t) = a_i * t^2 + b_i * t + c_i for i in {1, ..., n}
3n unknowns.

For i in {1, ..., n-1}:
    f_i(k_i) = f_(i+1)(k_i)
    ==> a_i * (k_i)^2 + b_i * k_i + c_i = a_(i+1) * (k_i)^2 + b_(i+1) * k_i + c_(i+1)
    ==> (-(k_i)^2) * a_i + (-k_i) * b_i + (-1) * c_i + (k_i)^2 * a_(i+1) + k_i * b_(i+1) + 1 * c_(i+1) = 0
A * x = b
    Where:
    x = [a_1, b_1, c_1, a_2, b_2, c_2, ..., a_n, b_n, c_n]
    b = [0] * (n-1)
    A = [[    -(k_1)^2,     -k_1, -1, (k_2)^2, k_2, 1],
         [    -(k_2)^2,     -k_2, -1, (k_3)^2, k_3, 1],
         ...
         [-(k_(n-1))^2, -k_(n-1), -1, (k_n)^2, k_n, 1]]  # FIXME
    n-1 equations.
         
f_i'(t) = 2 * a_i * t + b_i
For i in {1, ..., n-1}:
    f_i'(k_i) = f_(i+1)'(k_i)
    ==> 2 * a_i * k_i + b_i = 2 * a_(i+1) * k_i + b_(i+1)
    ==> (-2 * k_i) * a_i + (-1) * b_i + 0 * c_i + (2 * k_i) * a_(i+1) + 1 * b_(i+1) + 0 * c_(i+1) = 0
A * x = b
    Where:
    x = " "
    b = [0] * (n-1)
    A = [[    -k_1, -1, 0, k_2, 1, 0],
         [    -k_2, -1, 0, k_3, 1, 0],
         ...
         [-k_(n-1), -1, 0, k_n, 1, 0]]  # FIXME
    n-1 equations.

F_i(t) = (a_i / 3) * t^3 + (b_i / 2) * t^2 + c_i * t + C
For i in {1, ..., n}:
    (F_i(k_i) - F_i(k_(i-1))) / (k_i - k_(i-1)) = y[i]
    ==> F_i(k_i) - F_i(k_(i-1))) = y[i] * (k_i - k_(i-1))
    ==> ((a_i / 3) * (k_i)^3 + (b_i / 2) * (k_i)^2 + c_i * (k_i) + C) - ((a_i / 3) * (k_(i-1))^3 + (b_i / 2) * (k_(i-1))^2 + c_i * (k_(i-1)) + C) = y[i] * (k_i - k_(i-1))
    ==> (((k_i)^3 - (k_(i-1))^3) / 3) * a_i + (((k_i)^2 - (k_(i-1))^2) / 2) * b_i + (k_i - k_(i-1)) * c_i = y[i] * (k_i - k_(i-1))
A * x = b
    Where:
    x = " "
    b = [y[1] * (k_1 - k_0), y[2] * (k_2 - k_1), ... y[n] * (k_n - k_(n-1))]
    A = [[    ((k_1)^3 - (k_0)^3) / 3,     ((k_1)^2 - (k_0)^2) / 2,     k_1 - k_0],
         [    ((k_2)^3 - (k_1)^3) / 3,     ((k_2)^2 - (k_1)^2) / 2,     k_2 - k_1],
         ...
         [((k_n)^3 - (k_(n-1))^3) / 3, ((k_n)^2 - (k_(n-1))^2) / 2, k_n - k_(n-1)]]  # FIXME
    n equations.

Total: 3n-2 equations.
Boundary conditions:
    f_1'(k_0) = 0
        ==> a_1 * k_0 + b_1 = 0
    f_n'(k_n) = 0
        ==> a_n * k_n + b_n = 0
    2 equations.
